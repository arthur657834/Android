/system/build.prop
手机型号


-adb reboot bootloader
 -	进入刷机模式
 -adb reboot recovery
 -	进入恢复模式
 -
 -adb shell service list
 -	查看后台服务列表
 -adb shell service check phone
 -adb shell service call phone 2 s16 "10086"
 -adb shell cat /data/misc/wifi/*.conf
 -	查看wifi配置
 -	
 -adb devices
 -adb get-state
 -	device：设备正常连接
 -	offline：连接出现异常，设备无响应
 -	unknown：没有连接设备
 -
 -adb kill-server
 -adb start-server 
 -
 -adb install apk, 安装应用，覆盖安装是使用 -r 选项
 -adb uninstall , 卸载应用，后面跟的参数是应用的包名，请区别于 apk 文件名
 - shell pm uninstall -k 包名 保留缓存的卸载
 -adb logcat
 -adb bugreport:打印dumpsys、dumpstate、logcat的输出
 adb shell dumpsys battery/wifi/power/telephony.registry/window
 -   shell getprop gsm.operator.alpha
 -adb pull sdcard/pull.txt d:\
 -adb push d:\push.txt sdcard/
 -
 -adb root , adb remount, 只针对类似小米开发版的手机有用，可以直接已这两个命令获取 root 权限，并挂载系统文件系统为可读写状态
 -
 -adb reboot
 -	
 -adb forward tcp:1314 tcp :8888
 -执行该命令后所有发往宿主机 1314 端口的消息、数据都会转发到 Android 设备的 8888 端口上，因此可以通过远程的方式控制 Android 设备。
 -
 -adb connect 远程连接 Android 设备
 -
 -adb shell command
 -	pm list package
 -		-s：列出系统应用
 -		-3：列出第三方应用
 -		-f：列出应用包名及对应的apk名及存放位置
 -		-i：列出应用包名及其安装来源，结果显示例子：
 -
 -adb shell pm path com.tencent.mobileqq
 -adb shell pm dump com.tencent.mobileqq
 -
 -	pm install , 安装应用
 -		目标 apk 存放于 PC 端，请用 adb install 安装
 -		目标 apk 存放于 Android 设备上，请用 pm install 安装
 -
 -	pm uninstall
 -	pm clear
 -	pm set-install-location , pm get-install-location
 -		[0/auto]：默认为自动
 -		[1/internal]：默认为安装在手机内部
 -		[2/external]：默认安装在外部存储
 -
 -adb shell am start -n com.android.camera/.Camera  启动相机
 -adb shell am start -S com.android.camera/.Camera  先停止目标应用，再启动
 -adb shell am start -W com.android.camera/.Camera  等待应用完成启动
 -
 -adb shell am start -a android.intent.action.VIEW -d http://testerhome.com
 -adb shell am start -a android.intent.action.CALL -d tel:10086
 -
 -am instrument , 启动一个 instrumentation , 单元测试或者 Robotium 会用到
 -am monitor , 监控 crash 与 ANR
 -
 -am force-stop , 后跟包名，结束应用
 -am startservice , 启动一个服务
 -am broadcast , 发送一个广播
 -
 -adb shell input text test123456
 -adb shell input keyevent KEYCODE_HOME
 -adb shell input tap 500 500
 -adb shell input swipe 900 500 100 500
 -adb shell input swipe 500 500 501 501 2000
 -
 -adb shell screencap -p /sdcard/screen.png
 -adb shell screenrecord sdcard/record.mp4
 -
 -adb shell uiautomator dump  打印界面控件信息
 -
 -adb shell ime list -s  列出设备上的输入法
 -adb shell ime set com.baidu.input_mi/.ImeService
 -
 -adb shell wm size 屏幕分辨率
 -
 -adb shell log -p d -t xuxu "test adb shell log"
 --p：优先级，-t：tag，标签，后面加上 message
 -adb logcat -v time -s xuxu 读取日志
 -
 -adb shell getprop ro.build.version.sdk 查看 Android 设备的参数信息
 -adb shell setprop <key> <value>  修改系统属性 
 -
 -adb get-product 
 -adb get-serialno
 -adb shell getprop ro.build.version.release
 -adb shell getprop ro.build.version.sdk
 -adb shell getprop ro.serialno
 -adb shell getprop ro.carrier
 -adb shell getprop ro.hardware
 -adb shell getprop ro.bootloader
 -adb jdwp 查看指定的设施的可用的JDWP信息(Java Debug Wire Protocol Transport Interface)

	
	
	
