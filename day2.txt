-Action bar:
 -为 activity 显示标题，并且在标题左边显示一个 app icon。
 -
 -仅支持 Android 3.0 及以上版本:
 -从 Android 3.0(API lever 11) 开始，所有使用 Theme.Holo 主题（或者它的子类）的activity 都包含了 action bar，当targetSdkVersion 或 minSdkVersion 属性被设置成 “11” 或更大时，它是默认主题。
 -<uses-sdk android:minSdkVersion="11" ... />
 -
 -支持 Android 2.1 及以上版本
 -如果要添加 action bar，需要加载 Android Support 库。
 -MainActivity.java
 -public class MainActivity extends ActionBarActivity { ... }
 -
 -mainfest:
 -<manifest ... >
 -<uses-sdk android:minSdkVersion="7" android:targetSdkVersion="18" />  Android版本支持
 -
 -添加atction bar
 -在menu下的xml文件中添加:
 -    <item android:id="@+id/action_search"
 -          android:icon="@drawable/ic_action_search"
 -          android:title="@string/action_search"
 -          android:showAsAction="ifRoom" />   <=========>  app:showAsAction="ifRoom" />
 -		  
 -    <item android:id="@+id/action_settings"
 -          android:title="@string/action_settings"
 -          android:showAsAction="never" />
 -		  
 -这个属性可接受的值有：
 -1、always：这个值会使菜单项一直显示在Action Bar上。
 -2、ifRoom：如果有足够的空间，这个值会使菜单项显示在Action Bar上。
 -3、never：这个值使菜单项永远都不出现在Action Bar上。
 -4、withText：这个值使菜单项和它的图标，菜单文本一起显示。
 -		  
 -为 Action Bar 添加操作
 -
 -@Override
 -public boolean onCreateOptionsMenu(Menu menu) {
 -    // 为ActionBar扩展菜单项
 -    MenuInflater inflater = getMenuInflater();
 -    inflater.inflate(R.menu.main_activity_actions, menu);     main_activity_actions------>menu resource name
 -    return super.onCreateOptionsMenu(menu);
 -}
 -
 -可自定以下两个函数
 -private void openSearch() {
 -    Toast.makeText(this, "Search button pressed", Toast.LENGTH_SHORT).show();
 -}
 -
 -private void openSettings() {
 -    Toast.makeText(this, "Settings button pressed", Toast.LENGTH_SHORT).show();
 -}
 -	
 -@Override
 -public boolean onOptionsItemSelected(MenuItem item) {
 -    // 处理动作按钮的点击事件
 -    switch (item.getItemId()) {
 -        case R.id.action_search:
 -            openSearch();
 -            return true;
 -        case R.id.action_settings:
 -            openSettings();
 -            return true;
 -        default:
 -            return super.onOptionsItemSelected(item);
 -    }
 -}
 -
 -为下级 Activity 添加向上按钮
 -@Override
 -public void onCreate(Bundle savedInstanceState) {
 -    super.onCreate(savedInstanceState);
 -    setContentView(R.layout.activity_displaymessage);
 -
 -    getSupportActionBar().setDisplayHomeAsUpEnabled(true);----> 起作用的代码
 -    // 如果你的minSdkVersion属性是11或更高, 应该这么用:
 -    // getActionBar().setDisplayHomeAsUpEnabled(true);
 -}
 -
 -注意：其实有些已经自带了的，不用加
 -
 -自定义背景
 -为 activity 创建一个自定义主题，通过重写 actionBarStyle 属性来改变 action bar 的背景。actionBarStyle 属性指向另一个样式；在该样式里，通过指定一个 drawable 资源来重写 background 属性。
 -
 -style.xml
 -<?xml version="1.0" encoding="utf-8"?>
 -<resources xmlns:tools="http://schemas.android.com/tools">
 -<!-- 应用于程序或者活动的主题 -->
 -    <style name="CustomActionBarTheme" parent="@android:style/Theme.Holo.Light.DarkActionBar" tools:targetApi="14" >
 -        <item name="android:actionBarStyle">@style/MyActionBar</item>
 -    </style>
 -    <!-- ActionBar 样式 -->
 -    <style name="MyActionBar" parent="@android:style/Widget.Holo.Light.ActionBar.Solid.Inverse" tools:targetApi="14" >
 -        <item name="android:background">#FFFF00</item>
 -    </style>
 -</resources>
 -
 -修改activity.java中的 ActionBarActivity为Activity，但这个修改了会导致其他java代码中的功能不能实现,force close
 -
 -或者在activity中添加android:theme="@style/Theme.AppCompat" ，但这样背景修改的效果就没了
 -
 -查一下activity到底是个什么东西，或者现在是不是兼容3.0以上版本即可
 -
 -
 -自定义文本颜色
 -
 -支持 Android 2.1 和更高 
 -
 -<?xml version="1.0" encoding="utf-8"?>
 -<resources>
 -<!-- 应用于程序或者活动的主题 -->
 -<style name="CustomActionBarTheme"
 -parent="@style/Theme.AppCompat">
 -<item name="android:actionBarStyle">@style/MyActionBar</item>
 -<item name="android:actionBarTabTextStyle">@style/MyActionBarTabText</item>
 -<item name="android:actionMenuTextColor">@color/actionbar_text</item>
 -<!-- 支持库兼容 -->
 -<item name="actionBarStyle">@style/MyActionBar</item>
 -<item name="actionBarTabTextStyle">@style/MyActionBarTabText</item>
 -<item name="actionMenuTextColor">@color/actionbar_text</item>
 -</style>
 -<!-- ActionBar 样式 -->
 -<style name="MyActionBar"
 -parent="@style/Widget.AppCompat.ActionBar">
 -<item name="android:titleTextStyle">@style/MyActionBarTitleText</item>
 -<!-- 支持库兼容 -->
 -<item name="titleTextStyle">@style/MyActionBarTitleText</item>
 -</style>
 -<!-- ActionBar 标题文本 -->
 -<style name="MyActionBarTitleText"
 -parent="@style/TextAppearance.AppCompat.Widget.ActionBar.Title">
 -<item name="android:textColor">@color/actionbar_text</item>
 -<!-- 文本颜色属性textColor是可以配合支持库向后兼容的 -->
 -</style>
 -<!-- ActionBar Tab标签文本样式 -->
 -<style name="MyActionBarTabText"
 -parent="@style/Widget.AppCompat.ActionBar.TabText">
 -<item name="android:textColor">@color/actionbar_text</item>
 -<!-- 文本颜色属性textColor是可以配合支持库向后兼容的 -->
 -</style>
 -</resources>
 -
 -新建\res\values\color.xml 
 -<?xml version="1.0" encoding="utf-8"?>
 -<resources>
 -<color name="actionbar_text">#FF0000</color>                  #FF0000为红色 
 -</resources>